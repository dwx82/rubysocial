---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rails-deployment 
  labels: 
    app: rails-backend 
spec: 
  replicas: 2 
  selector: 
    matchLabels: 
      app: rails-backend 
  template: 
    metadata: 
      labels: 
        app: rails-backend 
    spec:
      containers:
      - name: rubysocial
        image: megadocker2000/rubysocial:{{ .Values.version }}
        ports: 
        - containerPort: 3000 
        env: 
          - name: RAILS_ENV 
            value: production 
          - name: RAILS_MASTER_KEY 
            valueFrom: 
              secretKeyRef: 
                name: rails-master-key 
                key: rails-master-key 
          - name: DATABASE_HOST 
            valueFrom: 
              secretKeyRef: 
                name: db-secret 
                key: ip 
          - name: DATABASE_USERNAME 
            valueFrom: 
              secretKeyRef: 
                name: db-secret 
                key: username 
          - name: DATABASE_PASSWORD 
            valueFrom: 
              secretKeyRef: 
                name: db-secret 
                key: password
          - name: STATIC_FILES_ENDPOINT 
            value: https://storage.cloud.google.com/megateam_bucket_staging
          - name: FRONTEND_VERSION 
            value: {{ .Values.version }} 

---
apiVersion: v1 
kind: Service 
metadata: 
  name: rails-backend 
spec: 
  type: ClusterIP 
  selector: 
    app: rails-backend 
  ports: 
    - protocol: TCP 
      port: 80 
      targetPort: 3000
      
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rails-backend
  namespace: default
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  tls:
    - secretName: letsencrypt
      hosts: 
        - staging.megateam.pp.ua
  rules:
  - host: staging.megateam.pp.ua
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rails-backend
            port:
              number: 80
...